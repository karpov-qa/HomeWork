Телеграм @ndreil

HW
Client_Server
1) Прочиать про клиент-серверную архитектуру
2) Что ткое HTTP и HTTPS 
HTTP - HyperText Transfer Protocol - протокол передачи гипертекста, по OSI являетсяется протоколом прикладного
верхнего(7-го) уровня. Актуальная версия HTTP 1.1
Протокол предназначен для передачи гипертекстовых документов, документов , которые содержат ссылки
Позволяющие переходить к другим документам
Клиент формирует запрос и отправляет его на сервер, после чего серверное ПО обрабатывает запрос, формирует ответ
и передает его обратно клиенту.
После этого клиент может продолжить отправлять запросы
Также HTTP часто используется как протокол передачи информации для других протоколов прикладного уровня, таких как SOAP, XML-RPC, WebDAV.
В таком случае говорят, что протокол используется как "транспорт"
Чтобы отправить запрос, необходимо составить стартовую строку, и задать минимум один заголовок, Host, который обязателен
и присутствует при каждом запросе

HTTPS - hypertext transfer protocol Secure - безопасный протокол передачи данных, которых поддерживает шифрование с помощью криптографических протоколов 
SSL и TLS, по сути расширенная версия протокол НТТР
SSL/TLS это цифровая подпись сайта. С ее помощью подтверждается ее подлинность.
Перед установкой защищенного соединения, браузер запрашивает этот документ и обращается к центру сертификации, чтобы подтвердить легальность документы
ССЛ и ТЛС по сути один сертификат, просто от разных компаний. Сейчас используется ТЛС 1.2 также есть новый свежий 1.3
Ключи шифрования
Асиметричный - каждая сторона имеет два ключа: публичный и частный, публичный доступен любому, частный только владельцу
Если браузер хочет отправить сообщение, то находит публичный ключ сервера, шифрует сообщение и отправляет на сервер
Сервер это сообщение расшифровывает своим частным ключом,чтобы ответить пользователю, сервер делает то же самое
Симметричный ключ - у обеих сторон есть ключ, с помощью которого они передают данные, между клиентом и сервером уже должен быть установлен контакт
чтобы они знали, на каком языке общаться
Чтобы установить HTTPS соединение браузеру и серверу надо договориться о симметричном ключе
для этого первым делом обмениваются асимметрично зашифрованными сообщениями, где узнают секретный ключ и общаются при помощи симметричного шифрования
Итог HTTPS 
1. Шифрование - инфа идет в зашифрованном виде, поэтому ее не так просто украсть и отследить действия
2. Аутентификация - посетитель уверен, что переходит на оф сайт, а не на дубликат мошенников
3. Сохранение данных, протокол фиксирует все изменения, и если все-таки была попытка взлома защиты, об этом можно узнать из сохраненных данных
3) HTTP методы 
Get - запрашивает информацию из указанного источника и не влияет на его содержимое, запрос доступен для кеширования и добавления в закладки
макс длина 2048 симв, ограничена браузером, 255 байт отправляется в URL, только символы ASCII 
Post - используется для отправки данных, что может оказать влияние на содержимое ресурса
Запросы не могут быть кешированы и не остаются в истории, нельзя добавить в закладки, могут быть ограничены только разработчиком
Head - аналогичен Гет запросу, только в ответе содержится лишь заголовок без тела, применяется для проверки существования ресурса по адресу
Put - загружает содержимое запроса на указанный URI, если ресурса нет, создает и вернет 201(Created)
Delete - удаляет указанный ресурс
Options - используется для описания параметров коммуникации между клиентом и сервером
Connect - преобразует соединение запроса в прозрачный TCP/IP клиент
4) HTTP статус коды сервера 
3 цифры которые определяют результат запроса (первая указывает класс)
1хх - информационные коды
2хх - успешное выполнение запроса
3хх - редирект, перенаправление 
4хх - ошибка на стороне клиента, браузера
5хх - ошибка на стороне сервера, сбои не связанные с клиентом

5) Что такое ядро браузера  - программа, преобразующая содержимое веб-страниц (HTML,XML,CSS,XSL) в интерактивное изображение, собирает дизайн по цифрам
Движок JS анализируетязык для достижения динамических эффектов на веб-странице, отвечает за интерпретацию, компиляцию и выполнение

6) Какие браузеры какиие ядра используют
Trident - движок Microsoft Explorer - прекратил свою работу
Gecko - открытый движок проекта Mozilla, кроме браузера используется в почтовом клиенте ThunderBird, и SeaMonkey
Presto - движок браузера опера до 2013 года
Webkit - движок для браузера Сафари, и гугл хром до 2013 года
Blink - ответвление от Webkit - сейчас на нем Хромиум, гугл хром с 28 версии, Майкрософт Эдж, Опера и Вивалди
7) Что такое API - application programming interface, контракт который предоставляет программа
это специальный интерфейс, который предназначен для взаимодействия разных программ между собой
API могут понимать друг друга и взаимодействовать, независимо на каком языке написано ПО
Для того чтобы обе стороны понимали друг друга, поэтому API документируют
Примеры:
погода, виджеты
Онлайн карты, чаще гугл и яндекс
Приложения для ОС, например браузеры
Плагины, модули для CMS
8. Что такое ендпоинты - представляетсобой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом.
Адрес, на который отправляются запросы
Эндпоинты работают вместе с методами АПИ. Это URL-адреса, которые используются для связи со службами и пользователями
Маршрут это имя которое отсылает работу АПИ к определенным эндпоинтам
Эндпоинт - само обращение к маршруту отдельным HTTP методом, выполняет конкретную задачу, принимает параметры и возвращает данные клиенту
9) URL (URI, URL, URN)
URL - Uniform resource locator (определитель местонахождения ресурса)
Определяет местонахождение ресурса в сети
URN - Uniform Resource name (унифицированное имя ресурса)
строка символов, которая используется для идентификации какого-либо ресурса, но только по имени
URI - Uniform resource Identifier (унифицированный идентификатор ресурса)
Используется для идентификации ресурса по адресу или имени, либо тому и другому вместе
10) Идемпотентные HTTP методы
Метод является идемпотентным если повторный идентичный запрос сделанный несколько раз подряд, имеет один и тот же эффект, не изменяющий состояния сервера
Метод не должен иметь побочных эффектов, кроме сбора статистики и подобных операций
GET, HEAD, PUT, DELETE идемпотентны, но не POST
Для идемпотентности рассматривается только изменение фактического состояния сервера, ведь коды статуса могут отличаться
11) Безопасные HTTP методы - метод является безопасным если он не меняет состояние сервера, то есть проводит операции только чтение
Безопасные методы GET, HEAD, OPTIONS, небезопасные PUT DELETE

Идемпотентный и небезопасный - значит что сколько бы ни повторялся запрос, только первый изменит состояние системы, а остальные состояние не меняют PUT DELETE
Идемпотентный и БЕзопасный - многократное повторение запроса вернет одно и то же состояние системы GET HEAD OPTIONS

12) Иденфикация, Аутентификация, Авторизация
Идентификация - процедура, в результате которой выявляется идентификатор субъекта, который его однозначно определяет (к примеру логин)
Аутентификация - проверка подлинности, путем сравнения пароля, с паролем сохраненным в БД
Авторизация - предоставление прав на выполнение определенных действий
К примеру хотим зайти в гугл почту, вводим логин, по нему идет идентификация, по паролю аутентификация, когда мы зашли в почту и читаем сообщения, то мы уже авторизованы
13) Что такое IP - Internet Protocol это уникальный адрес, по которому идентифицируется устройство в интернете или локальной сети
Позволяет передавать информация между устройствами в сети, содержит инфу о местоположении, позволяет различать компьютеры, маршрутизаторы и веб-сайты
Это строка из четырех чисел 192.168.1.1 в интервале каждое от 0 до 255, полный диапазон 0.0.0.0 до 255.255.255.255

14) Что такое октаты в DNS
порт ДНС 53
Формат запроса содержит:
Имя
Тип записи
Класс записи
Формат ответа:
Имя
Тип записи
Класс записи
Время жизни
длина данных
данные ответа
Флаги:
QR запрос (0), или ответ (1)
OPCODE (4 бита) 
0 - стандартный запрос
АА - авторитетный ответ (1) или нет (0)
ТС - пакет был обрезан (1) или нет (0)
RD - запрос на рекурсивный режим
RA - рекурсивный режим доступен
Z - зарезервирован
RCODE (4 бита) - статус, 0 - успешно, другие коды - ошибка
15) Что такое порт, сколько портов у Linux сервера 2 в 16 = 65536
Порт - это число, которое указывается при запросе на соединение, есть стандартные порты, которых все стараются придерживаться
80 - http просмотр Веб-страниц
443 - https шифрованный протокол
110 - pop3 протокол получения писем 
995 - pop3s шифрованный поп3
25 - smtp также отправка писем
465 smtps шифрованный, используется почтой Гугл
20,21 ftp ТСР порт протокола нешифрованного скачивания данных, типа торрентов
23 telnet нешифрованное подсоединение к удаленным компьютерам в командной строке
22 ssh шифрованная версия, с доп опциями
Есть порт, на который устанавливается соединение, и порт С которого. Все порты ваше, это порты НА. В момент установки соединения генерируется случайное число,
которое далее является портом С которого установили соединение
16) Уровни OSI
7 уровней
1 - физический, отвечает за обмен физическими сигналами между железом, нули и единицы, биты (PDU протокол)
2 - канальный, решает проблему адресации при передаче инфомрации, получает биты и превращает их в кадры(фреймы). Формирует кадры с адресом отправителя и получателя
Есть два подуровня MAC, LLC МАС отвечает за присвоение МАС адресов, второй проверяет и исправляет данные. На втором уровне работают коммутаторы, их задача передать кадры, используя МАС адреса
3 - Сетевой, использует маршрутизаторы, они получают МАС адреса и строят маршрут от одного устройства к другому,
64 битные МАС адреса преобразуются в 32 битные АЙПИ адреса
1,2,3 уровень это сетевые устройства
4 - транспортный это посредник между HOST Layers (1,2,3) и Media Layers
Его задача транспортировка пакетов, в передаче есть потери, и если есть данные чувствительные к потерям на этом уровне, используется протокол ТСР
Для мультимедийных файлов потери не так важны, критичнее задержка, тут используется UDP
5 - сеансовый, оперирует данными, отвечает за поддрежку сеанса или сессии, управляет взаимодействием между приложениями
примером может служить видеозвонок, необходимо чтобы два потока шли синхронно (голос и видео)
Задача пятого уровня сделать так чтобы собесединки могли понять кто говорит
6 - представления данных, занимается тем что представляет данные в понятном человеку и машине виде, отображает текст в кодировке ASCII или UTF-8
представляет картинки в нужный формат, а также видео и аудио, помимо этого шифрует данные для защиты
7 - прикладной, уровень приложений, то с чем взаимодействуют пользователи, графический интерфейс 
задача использовать свои протоколы, чтобы пользователь увидел данные в понятном ему виде
используется UDP(DHCP) или ТСР(HTTP,HTTPS,SFTP,DNS)
17) Хедеры http запросов
Заголовки НТТР позволяют клиенту и  серверу отправлять дополнительную информацию с запросом или ответом
в заголовке содержится не чувствительно к регистру название, и после (:) непосредственно значение
Заголовки могут быть: 
Основные применяются к запросам и к ответам, но не имеют отношения к данным передаваемым  теле
Заголовки запроса содержит больше информации о ресурсе который нужно получить 
Заголовки ответа содержат доп инфу об ответе, например его местонахождение
Заголовки сущности содержат информацию о теле ресурса, например его длину содержимого